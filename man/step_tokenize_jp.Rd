% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tokenize.R
\name{step_tokenize_jp}
\alias{step_tokenize_jp}
\title{#' Tokenization of Japanese character variables}
\usage{
step_tokenize_jp(
  recipe,
  ...,
  role = NA,
  trained = FALSE,
  columns = NULL,
  options = list(mode = "A", type = "surface", pos = TRUE),
  skip = FALSE,
  id = rand_id("tokenize_jp")
)
}
\arguments{
\item{recipe}{A recipe object. The step will be added to the
sequence of operations for this recipe.}

\item{...}{One or more selector functions to choose variables.
For \code{\link[textrecipes:step_tokenize]{step_tokenize()}}, this indicates the variables to be encoded
into a \link[textrecipes]{tokenlist}. See \code{\link[recipes:selections]{recipes::selections()}} for more
details. For the \code{tidy} method, these are not currently used.}

\item{role}{Not used by this step since no new variables are
created.}

\item{trained}{A logical to indicate if the recipe has been
baked.}

\item{columns}{A list of tibble results that define the
encoding. This is \code{NULL} until the step is trained by
\code{\link[recipes:prep]{recipes::prep.recipe()}}.}

\item{options}{list}

\item{skip}{A logical. Should the step be skipped when the
recipe is baked by \code{\link[recipes:bake]{recipes::bake.recipe()}}? While all
operations are baked when \code{\link[recipes:prep]{recipes::prep.recipe()}} is run, some
operations may not be able to be conducted on new data (e.g.
processing the outcome variable(s)). Care should be taken when
using \code{skip = TRUE} as it may affect the computations for
subsequent operations.}

\item{id}{A character string that is unique to this step to identify it}
}
\description{
\code{\link[=step_tokenize_jp]{step_tokenize_jp()}} creates a \emph{specification} of a recipe step that
will convert a character predictor into a \link{tokenlist_jp}.
}
